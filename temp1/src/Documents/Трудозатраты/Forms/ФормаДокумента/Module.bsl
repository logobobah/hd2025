#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, Новый Структура("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.РеализацияВБухгалтерии = "";
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
		Объект.Состояние = Перечисления.СостоянияТрудозатрат.Новый;	
	КонецЕсли;
	
	//+++ КИТЭК ЧехловНИ 11.04.2024
	
	Если ЗначениеЗаполнено(Объект.Заказчик) И Объект.ПроектыПоЗаказчику.Количество() = 0 Тогда
		
		ЗаполнитьТЧПроекты(Объект.Заказчик);
		
			
	КонецЕсли;
	
	ЭтотОбъект.ПроектыВключенныеВОтбор.Очистить();
	
	Для каждого Строка Из Объект.ПроектыПоЗаказчику Цикл
			
		Если Строка.ВключитьВОтбор Тогда     
				
			ЭтотОбъект.ПроектыВключенныеВОтбор.Добавить(Строка.Проекты);
				
		КонецЕсли;
		
	КонецЦикла;  
	
	//--- КИТЭК ЧехловНИ 11.04.2024
	
	//+++ КИТЭК ХандожкоМА 12.11.2024
	ПолучитьКоличествоФактическое();

	Для Каждого СтрокаТЧ Из Объект.Работы Цикл	
		ЗадачаСсылка = СтрокаТЧ.Задача; 
		ЗадачаОбъект = ЗадачаСсылка.ПолучитьОбъект();
		СтрокаТЧ.Номер = ЗадачаОбъект.Номер;
	КонецЦикла; 
	//--- КИТЭК ХандожкоМА 12.11.2024

	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	 
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
	
	//+++ КИТЭК ХандожкоМА 12.11.2024
	ПолучитьКоличествоФактическое(); 
	//--- КИТЭК ХандожкоМА 12.11.2024

	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СтандартныеПодсистемыСвойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Заполнить(Команда)
	
	//Если Объект.Работы.Количество() > 0 Тогда
	//	Ответ = Вопрос("Табличная часть будет перезаполнена. Продолжить?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	Если Объект.Заказчик.Пустая() Тогда
		Сообщить("Заказчик не заполнен. Действие отменено.");
		Возврат;
	КонецЕсли;
	//Если Объект.Отдел.Пустая() Тогда
	//	Сообщить("Подразделение не заполнено. Действие отменено.");
	//	Возврат;
	//КонецЕсли;
	
	//+++ КИТЭК ЧехловНИ 11.04.2024
	ЭтотОбъект.ПроектыВключенныеВОтбор.Очистить();
	
	Для каждого Строка Из Объект.ПроектыПоЗаказчику Цикл
		
		Если Строка.ВключитьВОтбор Тогда     
				
			ЭтотОбъект.ПроектыВключенныеВОтбор.Добавить(Строка.Проекты);
				
		КонецЕсли;
	
	КонецЦикла;
	//--- КИТЭК ЧехловНИ 11.04.2024
	ЗаполнитьНаСервере();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОплаты(Команда)
	ЗаполнитьНаСервере(Истина);
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере(ТолькоОплаты = Ложь)
	
	Если Не ТолькоОплаты Тогда
		
		//+++ КИТЭК ЧехловНИ 11.04.2024
		СписокПроектов = Новый Массив;
		
		Для каждого Строка Из Объект.ПроектыПоЗаказчику Цикл
			
			Если Строка.ВключитьВОтбор Тогда     
				
				СписокПроектов.Добавить(Строка.Проекты);
				
			КонецЕсли;
			
		КонецЦикла;
		//--- КИТЭК ЧехловНИ 11.04.2024
		
		ТЗРаботы = Документы.Трудозатраты.ЗаполнитьТабличнуюЧасть(СписокПроектов, ЭтотОбъект.УчитыватьНевключенныеЗадачи, Объект.Дата, Объект.Отдел, Объект.Заказчик, Объект.Ссылка,Период.ДатаНачала, Период.ДатаОкончания);  //Редакция КИТЭК ЧехловНИ 05.04.2024
		
		Объект.Работы.Загрузить(ТЗРаботы);
		
		//+++ КИТЭК ХандожкоМА 19.02.2025  
		ПолучитьКоличествоФактическое();
		//--- КИТЭК ХандожкоМА 19.02.2025  
		
	КонецЕсли;
	//Заполнение ТЧ Оплаты
	Объект.Оплата.Загрузить(Документы.Трудозатраты.ЗаполнитьОплату(Объект.Работы.Выгрузить(), Объект.Дата, Объект.Организация));
	
КонецПроцедуры	
	
&НаКлиенте
Процедура РаботыКоличествоПриИзменении(Элемент)
	ТЧ = Элементы.Работы.ТекущиеДанные;
	ТЧ.Сумма = ТЧ.Количество * ТЧ.Цена;
КонецПроцедуры

&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	
	Если Объект.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияТрудозатрат.Оплачен") Тогда
		ТекДата = ТекущаяДата();
		Для Каждого СтрокаТЧ Из Объект.Оплата Цикл
			Если СтрокаТЧ.Дата = '00010101' Тогда
				СтрокаТЧ.Дата = ТекДата;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РаботыЗадачаПриИзмененииНаСервере()
	СтрокаТЧ = Объект.Работы.НайтиПоИдентификатору(Элементы.Работы.ТекущаяСтрока);
	СтрокаТЧ.Проект = СтрокаТЧ.Задача.Проект;
	СтрокаТЧ.Исполнитель = СтрокаТЧ.Задача.Исполнитель;
	СтрокаТЧ.Количество = СтрокаТЧ.Задача.ОценкаТрудозатрат; 	
	СтрокаТЧ.Цена = РегистрыСведений.ЧасовыеСтавкиЗадач.ПолучитьЦенуЗадачи(СтрокаТЧ.Задача);
	СтрокаТЧ.Сумма = СтрокаТЧ.Количество * СтрокаТЧ.Цена;
	
	//+++ КИТЭК ХандожкоМА 12.11.2024
	СтрокаТЧ.Номер = СтрокаТЧ.Задача.Номер;
 	ПолучитьКоличествоФактическое();   
	//--- КИТЭК ХандожкоМА 12.11.2024

КонецПроцедуры

&НаСервере
Процедура ПолучитьКоличествоФактическое() //+++ КИТЭК ХандожкоМА 12.11.2024
	
	Для Каждого СтрокаТЧ Из Объект.Работы Цикл	
		ЗадачаСсылка = СтрокаТЧ.Задача; 
		ЗадачаОбъект = ЗадачаСсылка.ПолучитьОбъект(); 
		СтрокаТЧ.КоличествоФактическое = ЗадачаОбъект.Работы.Итог("Трудозатраты");
		КоличествоСтрок = ЗадачаОбъект.Работы.Количество();   
		Если ЗадачаОбъект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗадач.ВРаботе") 	
			И КоличествоСтрок > 0 Тогда	  	
			ПоследняяСтрока = ЗадачаОбъект.Работы[КоличествоСтрок - 1];	 
			ФактПоследнейСтроки = (ТекущаяДата() - ПоследняяСтрока.ДатаНачала) / 3600;
			Если ФактПоследнейСтроки > 0 Тогда    	
				СтрокаТЧ.КоличествоФактическое = СтрокаТЧ.КоличествоФактическое + ФактПоследнейСтроки; 	
			КонецЕсли; 	
		КонецЕсли; 
	КонецЦикла;	
КонецПроцедуры //--- КИТЭК ХандожкоМА 12.11.2024


&НаКлиенте
Процедура РаботыЗадачаПриИзменении(Элемент)
	РаботыЗадачаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОплатаПриИзменении(Элемент)
	Объект.СуммаОплатыЗаказчиком = 0;
	Объект.СуммаОплатыИсполнителям = 0;
	Для Каждого СтрокаТЧ Из Объект.Оплата Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.Дата) Тогда
			Если СтрокаТЧ.Сумма < 0 Тогда
				Объект.СуммаОплатыЗаказчиком = Объект.СуммаОплатыЗаказчиком - СтрокаТЧ.Сумма;
			ИначеЕсли Не СтрокаТЧ.Исполнитель.Пустая() Тогда
				Объект.СуммаОплатыИсполнителям = Объект.СуммаОплатыИсполнителям + СтрокаТЧ.Сумма;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры



#Область HTTP

&НаСервереБезКонтекста
Функция ПолучитьСведенияОHTTPПодключении(Владелец) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	кт_СведенияОHTTPПодключенииКБухгалтерии.Сервер КАК Сервер,
		|	кт_СведенияОHTTPПодключенииКБухгалтерии.База КАК База,
		|	кт_СведенияОHTTPПодключенииКБухгалтерии.Логин КАК Логин,
		|	кт_СведенияОHTTPПодключенииКБухгалтерии.Пароль КАК Пароль
		|ИЗ
		|	РегистрСведений.кт_СведенияОHTTPПодключенииКБухгалтерии КАК кт_СведенияОHTTPПодключенииКБухгалтерии
		|ГДЕ
		|	кт_СведенияОHTTPПодключенииКБухгалтерии.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		СведенияОHTTPПодключении = Новый Структура;
		СведенияОHTTPПодключении.Вставить("Сервер", Выборка.Сервер);
		СведенияОHTTPПодключении.Вставить("База", Выборка.База);
		СведенияОHTTPПодключении.Вставить("Логин", Выборка.Логин);
		СведенияОHTTPПодключении.Вставить("Пароль", Выборка.Пароль);
		
		Возврат СведенияОHTTPПодключении; 
	КонецЕсли;
	
	Возврат Неопределено;
	//Возврат  РегистрыСведений.кт_СведенияОHTTPПодключенииКБухгалтерии.ПолучитьПоследнее(,СтруктураОтбора);  
	
КонецФункции
 
&НаКлиенте
Процедура ЗаполнитьОплатуПоHTTP(Команда)
		
	Если Объект.РеализацияВБухгалтерии = "" Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Реквезит РеализацияВБухгалтерии не заполнен!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;   
	
	СведенияОHTTPПодключении = ПолучитьСведенияОHTTPПодключении(Объект.Организация);  
		
	Если СведенияОHTTPПодключении = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Регистр сведений ""кт_СведенияОHTTPПодключенииКБухгалтерии не заполнен""!";		
		Сообщение.Сообщить();
		Возврат;
	Иначе
		Сервер = СведенияОHTTPПодключении.Сервер;
		База = СведенияОHTTPПодключении.База;
		Логин = СведенияОHTTPПодключении.Логин;
		Пароль = СведенияОHTTPПодключении.Пароль;
	КонецЕсли;
	
	СсылкаНаРеализацию = кт_HTTPОбменСБухгалтерией.ПолучитьСсылкуИзНавигационнойСсылки(Объект.РеализацияВБухгалтерии);
			 
	АдресРесурса = СтрШаблон("/%1/hs/ObmenHD/find_one/%2", База, СсылкаНаРеализацию);     
	
	Попытка	
		Соединение = Новый HTTPСоединение(Сервер,,Логин,Пароль);	
	Исключение
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат;
	КонецПопытки;
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "text/plain;charset=UTF-8");

	HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса,Заголовки);
	
	Попытка
		Ответ = Соединение.Получить(HTTPЗапрос);
	Исключение
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат;
	КонецПопытки;
	
	Если Ответ.КодСостояния <> 200 Тогда 
		Сообщение.Текст = СтрШаблон("Ошибка %1", Ответ.КодСостояния);
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;

	СтрокаJSON = Ответ.ПолучитьТелоКакСтроку(); 
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	
	МассивСтруктур = ПрочитатьJSON(ЧтениеJSON); 

	Для Каждого Строка Из МассивСтруктур Цикл  
		
		 СтрокаОплата = Объект.Оплата.Добавить();
		 
		 СтрокаОплата.Номер = Строка.Номер;   
		 СтрокаОплата.Дата = '00010101' + Строка.Дата;
		 СтрокаОплата.Сумма = Строка.Сумма;
		 СтрокаОплата.Комментарий = Строка.НазначениеПлатежа;
		 СтрокаОплата.Поступление = Строка.НавигационнаяСсылка;
		 
	 КонецЦикла; 
	 
	 Сообщение = Новый СообщениеПользователю;
	 Сообщение.Текст = "Готово!";
	 Сообщение.Сообщить();
	
КонецПроцедуры

 &НаСервере
Функция ПолучитьJSONСтрокуРаботы()
	
	Записать();
	
	Массив = Новый Массив;   
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ТрудозатратыРаботы.Ссылка.Заказчик.ИНН, 0) КАК КонтрагентИНН,
		|	ЕСТЬNULL(ТрудозатратыРаботы.Ссылка.Организация.ИНН, 0) КАК ОрганизацияИНН,
		|	ТрудозатратыРаботы.Задача.Наименование КАК Наименование,
		|	ТрудозатратыРаботы.Количество КАК Количество,
		|	ТрудозатратыРаботы.Цена КАК Цена,
		|	ТрудозатратыРаботы.Сумма КАК Сумма, 
		//+++ КИТЭК ЧехловНИ 06.05.2024
		|	ТрудозатратыРаботы.Ссылка.РеализацияВБухгалтерии КАК РеализацияВБухгалтерии
		//--- КИТЭК ЧехловНИ 06.05.2024
		|ИЗ
		|	Документ.Трудозатраты.Работы КАК ТрудозатратыРаботы
		|ГДЕ
		|	ТрудозатратыРаботы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Сообщили = Ложь;
	Пока Выборка.Следующий() Цикл
		Структура = Новый Структура;    
		
		Если Не Сообщили И Выборка.ОрганизацияИНН = "" Тогда //ред. 27.04.2024 КИТЭК ЧехловНИ (ОрганизацияИНН = 0 -> ОрганизацияИНН = "")
			 Сообщение = Новый СообщениеПользователю;
			 Сообщение.Текст = "У организации заказчика не заполнен ИНН";
			 Сообщение.Сообщить(); 
			 Сообщили = Истина;
		КонецЕсли;
		
		Структура.Вставить("ОрганизацияИНН", Выборка.ОрганизацияИНН); 
		Структура.Вставить("КонтрагентИНН", Выборка.КонтрагентИНН);
		Структура.Вставить("Наименование", Выборка.Наименование);	
		Структура.Вставить("Количество", Выборка.Количество);
		Структура.Вставить("Сумма", Выборка.Сумма);
		Структура.Вставить("Цена", Выборка.Цена); 
		
		
		//+++ КИТЭК ЧехловНИ 06.05.2024
		Структура.Вставить("Реализация", Выборка.РеализацияВБухгалтерии);
		//--- КИТЭК ЧехловНИ 06.05.2024
			
		Массив.Добавить(Структура);
	КонецЦикла;
				
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Массив);
	СтрокаJSON = ЗаписьJSON.Закрыть();
	
	Возврат СтрокаJSON;

КонецФункции

&НаКлиенте
Процедура ПродолжитьHTTPОбмен()     

	СведенияОHTTPПодключении = ПолучитьСведенияОHTTPПодключении(Объект.Организация);     
	
	Если СведенияОHTTPПодключении = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Регистр сведений ""кт_СведенияОHTTPПодключенииКБухгалтерии не заполнен""!";		
		Сообщение.Сообщить();
		Возврат;
	Иначе
		Сервер = СведенияОHTTPПодключении.Сервер;
		База = СведенияОHTTPПодключении.База;
		Логин = СведенияОHTTPПодключении.Логин;
		Пароль = СведенияОHTTPПодключении.Пароль;
	КонецЕсли;
	
	АдресРесурса = СтрШаблон("/%1/hs/ObmenHD/Create",База);     
	
	Попытка	
		Соединение = Новый HTTPСоединение(Сервер, ,Логин,Пароль);	
	Исключение
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат;
	КонецПопытки;
		
	СтрокаJSON = ПолучитьJSONСтрокуРаботы();

	Если СтрокаJSON = "[]" Тогда
		Сообщение.Текст = "Табличная часть пуста!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли; 

	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "text/plain;charset=UTF-8");
	
	HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса, Заголовки);
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаJSON);
	
	Попытка
		Ответ = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
	Исключение
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат;
	КонецПопытки; 
		
	Если Ответ.КодСостояния <> 200 Тогда 
		Сообщение.Текст = СтрШаблон("Ошибка %1", Ответ.КодСостояния);
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	СтрокаJSON = Ответ.ПолучитьТелоКакСтроку(); 
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	
	Массив = ПрочитатьJSON(ЧтениеJSON); 
	
	Если Массив.Количество() > 0 Тогда
		Объект.РеализацияВБухгалтерии = 	СтрШаблон("%1%2", Массив[0],Массив[1]);
		Записать();
	КонецЕсли;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Готово!";
	Сообщение.Сообщить();

КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаHTTP(Результат, Параметры) Экспорт  
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПродолжитьHTTPОбмен();
	КонецЕсли;
	
КонецПроцедуры 

 &НаКлиенте
Процедура HTTPОбмен(Команда)   
	
	Оповещение = Новый ОписаниеОповещения("ПослеВопросаHTTP",ЭтаФорма);
	ПоказатьВопрос(Оповещение,"Документ будет записан, вы уверены?",
			РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да);
			
КонецПроцедуры


#КонецОбласти


&НаКлиенте
Процедура ПерейтиПоВнешнейСсылке(Строка) 
	
	ПервыйСимвол = СтрНайти(Строка, "→") + 1;
	ПерейтиПоНавигационнойСсылке(Сред(Строка, ПервыйСимвол));
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлниеРеализацияНажатие(Элемент, СтандартнаяОбработка) 
	
	СтандартнаяОбработка = Ложь;
	ПерейтиПоВнешнейСсылке(Объект.РеализацияВБухгалтерии);
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)   
	
	Если Поле.Имя = "ОплатаПоступление" Тогда
		СтандартнаяОбработка = Ложь;   
		ПерейтиПоВнешнейСсылке(Элемент.ТекущиеДанные.Поступление);
	КонецЕсли;     
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыПроекта = Новый Структура("Заказчик", Объект.Заказчик);
	ОткрытьФорму("Справочник.Проекты.ФормаСписка", ПараметрыПроекта); 
КонецПроцедуры

//+++ КИТЭК ЧехловНИ 11.04.2024
&НаСервере
Функция ЗаполнитьТЧПроекты (Заказчик)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Проекты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Актуален = ИСТИНА
	|	И Проекты.ОсновнойЗаказчик = &Заказчик";
	
	Запрос.УстановитьПараметр("Заказчик", Заказчик);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Сообщить ("Отсутствуют проекты у данного заказчика!");
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = Объект.ПроектыПоЗаказчику.Добавить();
			НоваяСтрока.Проекты = Выборка.Ссылка;
			НоваяСтрока.ВключитьВОтбор = Истина;
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецФункции


&НаКлиенте
Процедура ЗаказчикПриИзменении(Элемент)
	
	Объект.ПроектыПоЗаказчику.Очистить();
	ЗаполнитьТЧПроекты(Объект.Заказчик);
		
КонецПроцедуры


&НаКлиенте
Процедура ВключитьВОтборПриИзменении(Элемент)
	
	ЭтотОбъект.ПроектыВключенныеВОтбор.Очистить();
	
	Для каждого Строка Из Объект.ПроектыПоЗаказчику Цикл
			
		Если Строка.ВключитьВОтбор Тогда     
				
			ЭтотОбъект.ПроектыВключенныеВОтбор.Добавить(Строка.Проекты);
				
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
//--- КИТЭК ЧехловНИ 11.04.2024  

//+++ КИТЭК ХандожкоМА 19.02.2025
&НаСервере
Процедура РаботыЦенаПриИзмененииНаСервере()
	СтрокаТЧ = Объект.Работы.НайтиПоИдентификатору(Элементы.Работы.ТекущаяСтрока);	
	СтрокаТЧ.Сумма = СтрокаТЧ.Количество * СтрокаТЧ.Цена;
КонецПроцедуры

&НаКлиенте
Процедура РаботыЦенаПриИзменении(Элемент)
	РаботыЦенаПриИзмененииНаСервере();
КонецПроцедуры
//--- КИТЭК ХандожкоМА 19.02.2025  

