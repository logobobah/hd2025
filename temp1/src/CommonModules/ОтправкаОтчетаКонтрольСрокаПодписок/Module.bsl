Процедура ОтправкаОтчетаКонтрольСрокаПодписок() Экспорт
	ТекстПисьма = "Отчет окончания действия подписок" + Символы.ПС;
	ЗаписьЖурналаРегистрации("Регл.задание: Отчет по срокам подписок", УровеньЖурналаРегистрации.Информация, , , "Старт:" + Формат(ТекущаяДата(), "гггг.ММ.дд ЧЧ:мм:сс"), );
	ПутьКФайлу = "C:\Users\Public\";
	ИмяФайла = "temp.xls";
	ПолноеИмяФайла = ПутьКФайлу+ИмяФайла;
	ЗапросСписокМенеджеровДляРассылки = Новый Запрос;
	ЗапросСписокМенеджеровДляРассылки.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователи,
	|	Пользователи.АдресЭП КАК АдресЭП
	|ИЗ
	|	Справочник.Пользователи.КонтактнаяИнформация КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка В
	|			(ВЫБРАТЬ
	|				Заказчики.КурирующийМенеджер КАК КурирующийМенеджер
	|			ИЗ
	|				Справочник.ПрограммныеПродукты КАК ПрограммныеПродукты
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Заказчики КАК Заказчики
	|					ПО
	|						ПрограммныеПродукты.Владелец = Заказчики.Ссылка
	|			ГДЕ
	|				ПрограммныеПродукты.ДатаОкончанияПодписки <= ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, Заказчики.СрокУведомления)
	|				И ПрограммныеПродукты.ВыставленНовыйСчет = ЛОЖЬ)
	|	И НЕ Пользователи.АдресЭП = """"";
	ЗапросСписокМенеджеровДляРассылки.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	СписокМенеджеровДляРассылки = ЗапросСписокМенеджеровДляРассылки.Выполнить().Выгрузить();
	Для Каждого Менеджер из СписокМенеджеровДляРассылки Цикл
		Таб = СоздатьОтчет(ТекстПисьма, Менеджер.Пользователи);
		Попытка
			Таб.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.XLS);
		Исключение
			ЗаписьЖурналаРегистрации("Регл.задание: Отчет по срокам подписок", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось создать файл!" + ОписаниеОшибки(), );
		КонецПопытки;        
		ОтправкаУведомлений(ТекстПисьма, ПолноеИмяФайла, Менеджер.АдресЭП);
	КонецЦикла;
	ЗаписьЖурналаРегистрации("Регл.задание: Отчет по срокам подписок", УровеньЖурналаРегистрации.Информация, , , "Финиш:" + Формат(ТекущаяДата(), "гггг.ММ.дд ЧЧ:мм:сс"), );
КонецПроцедуры

Функция СоздатьОтчет(ТекстПисьма, МенеджерСсылка)
	Таб = Новый ТабличныйДокумент;
	Попытка        
		СхемаКомпоновкиДанных = Отчеты.КонтрольСрокаПодписок.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");    
		НовыйТекстЗапроса =
		"ВЫБРАТЬ
		|	ПрограммныеПродукты.Наименование КАК Наименование,
		|	ПрограммныеПродукты.СерийныйНомер КАК СерийныйНомер,
		|	ПрограммныеПродукты.ВидЛицензиии КАК ВидЛицензиии,
		|	ПрограммныеПродукты.Описание КАК Описание,
		|	ПрограммныеПродукты.ДатаНачалаПодписки КАК ДатаНачалаПодписки,
		|	ПрограммныеПродукты.ДатаОкончанияПодписки КАК ДатаОкончанияПодписки,
		|	ПрограммныеПродукты.Владелец КАК Владелец,
		|	ПрограммныеПродукты.Владелец.КурирующийМенеджер КАК ВладелецКурирующийМенеджер
		|ИЗ
		|	Справочник.ПрограммныеПродукты КАК ПрограммныеПродукты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Заказчики КАК Заказчики
		|		ПО ПрограммныеПродукты.Владелец = Заказчики.Ссылка
		|ГДЕ
		|	ПрограммныеПродукты.ДатаОкончанияПодписки <= ДОБАВИТЬКДАТЕ(ДАТАВРЕМЯ(" + 
		Формат(ТекущаяДата(), "ДФ=гггг") + "," + Месяц(ТекущаяДата()) + "," + День(ТекущаяДата()) + "), ДЕНЬ, Заказчики.СрокУведомления)
		|И ПрограммныеПродукты.ВыставленНовыйСчет = ЛОЖЬ";
		
		СхемаКомпоновкиДанных.НаборыДанных[0].Запрос = НовыйТекстЗапроса;
		Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
		Расшифровка = Новый ДанныеРасшифровкиКомпоновкиДанных;    
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;    
		Настройки.Отбор.Элементы[0].Использование = Ложь;
		Настройки.Отбор.Элементы[1].Использование = Ложь;
		ОтборПоМенеджеру = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоМенеджеру.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ВладелецКурирующийМенеджер");
		ОтборПоМенеджеру.ПравоеЗначение = МенеджерСсылка;
		ОтборПоМенеджеру.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборПоМенеджеру.Использование  = Истина;
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, Расшифровка);    
		ВнешниеПараметры = Новый Структура;    
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеПараметры, Расшифровка);    
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(Таб);    
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
		Возврат Таб;
	Исключение
		ТекстПисьма = ТекстПисьма + "Ошибка при создании отчета! " + ОписаниеОшибки() + Символы.ПС;
		Возврат Таб;
	КонецПопытки;
КонецФункции

Процедура ОтправкаУведомлений(ТекстПисьма, ПолноеИмяФайла, АдресЭПМенеджера)
	УстановитьПривилегированныйРежим(Истина);
	Пароли = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты.Ссылка, "Пароль, ПарольSMTP");
	УстановитьПривилегированныйРежим(Ложь);
	Pass = Пароли.ПарольSMTP;
	Отправитель = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	ИПП = Новый ИнтернетПочтовыйПрофиль;
	ИПП.АдресСервераSMTP   = Отправитель.СерверИсходящейПочты;
	ИПП.ПарольSMTP         = Pass;
	ИПП.ПользовательSMTP   = Отправитель.ПользовательSMTP;
	ИПП.ПортSMTP           = 587;            // Отправитель.ПортСервераИсходящейПочты; (по 465 порту выдает ошибку)
	ИПП.АутентификацияSMTP = СпособSMTPАутентификации.Login;
	Сообщение = Новый ИнтернетПочтовоеСообщение;
	Сообщение.Кодировка = "UTF-8";
	Сообщение.Получатели.Добавить(АдресЭПМенеджера);            	
	Сообщение.Отправитель.Адрес = Отправитель.ПользовательSMTP;
	Сообщение.Тема = "Регл.задание: Отчет по срокам подписок";
	Попытка
		Сообщение.Вложения.Добавить(ПолноеИмяФайла,"Отчет");
	Исключение
		ЗаписьЖурналаРегистрации("Регл.задание: Отчет по срокам подписок", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось добавить вложение!" + ОписаниеОшибки(), );
	КонецПопытки;
	Сообщение.Тексты.Добавить(ТекстПисьма);
	
	ПочтаИсх = Новый ИнтернетПочта;
	Попытка
		ПочтаИсх.Подключиться(ИПП);
		ПочтаИсх.Послать(Сообщение);
	Исключение
		ЗаписьЖурналаРегистрации("Регл.задание: Отчет по срокам подписок", УровеньЖурналаРегистрации.Ошибка, , , "Не удалось отправить письмо! " + ОписаниеОшибки(), );
	КонецПопытки;
	ПочтаИсх.Отключиться();
КонецПроцедуры