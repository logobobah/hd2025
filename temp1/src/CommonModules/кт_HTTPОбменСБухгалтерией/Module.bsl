
Функция ПолучитьСсылкуИзНавигационнойСсылки(Строка) Экспорт
	
	НомерСимвола = СтрНайти(Строка, "ref=") + 4; 	
	СсылкаНаРеализацию = Сред(Строка, НомерСимвола); 
	
	ПерваяСекция = Сред(СсылкаНаРеализацию,1,4);
	ВтораяСекция = Сред(СсылкаНаРеализацию,5,12);
	ТретьяСекция = Сред(СсылкаНаРеализацию,17,4);
	ЧетвертаяСекция = Сред(СсылкаНаРеализацию,21,4);
	ПятаяСекция = Сред(СсылкаНаРеализацию,25,8);  
	
	СсылкаНаРеализацию = СтрШаблон("%1-%2-%3-%4-%5",
	ПятаяСекция, ЧетвертаяСекция, ТретьяСекция, ПерваяСекция,ВтораяСекция);  
	
	Возврат СсылкаНаРеализацию;
	
КонецФункции 

Процедура ЗаполненитьОплатуВТрудозатратах(Строка) Экспорт
	
	УИД = Новый УникальныйИдентификатор(Строка.Трудозатраты);
	Трудозатраты = Документы.Трудозатраты.ПолучитьСсылку(УИД);
	
	Трудозатраты = Трудозатраты.ПолучитьОбъект();
	
	СтрокаОплата = Трудозатраты.Оплата.Добавить();
	СтрокаОплата.Номер = Строка.Номер;   
	СтрокаОплата.Дата = '00010101' + Строка.Дата;
	СтрокаОплата.Сумма = Строка.Сумма;
	СтрокаОплата.Комментарий = Строка.НазначениеПлатежа;
	СтрокаОплата.Поступление = Строка.НавигационнаяСсылка;
	
	Трудозатраты.Записать();
	
КонецПроцедуры

Функция ПолучитьJSONСтрокуТрудозатраты(Организация) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Трудозатраты.Ссылка КАК Ссылка,
	|	Трудозатраты.РеализацияВБухгалтерии КАК РеализацияВБухгалтерии
	|ИЗ
	|	Документ.Трудозатраты КАК Трудозатраты
	|ГДЕ
	|	Трудозатраты.Проведен = ИСТИНА
	|	И Трудозатраты.РеализацияВБухгалтерии <> """"
	|	И НЕ Трудозатраты.Оплата.НомерСтроки В (1)
	|	И Трудозатраты.Организация = &Организация";
	
	Запрос.Параметры.Вставить("Организация", Организация); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Массив = Новый Массив;   
	
	Пока Выборка.Следующий() Цикл    	
		Структура = Новый Структура;
		Структура.Вставить("УИД", ПолучитьСсылкуИзНавигационнойСсылки(Выборка.РеализацияВБухгалтерии));
		Структура.Вставить("Трудозатраты", Строка(Выборка.Ссылка.УникальныйИдентификатор()));
		
		Массив.Добавить(Структура);   		
	КонецЦикла; 
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Массив);
	СтрокаJSON = ЗаписьJSON.Закрыть();
	
	Возврат СтрокаJSON;
	
КонецФункции

Процедура НачатьЗаполнениеОплатыВТрудозатратах() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	кт_СведенияОHTTPПодключенииКБухгалтерии.Владелец КАК Владелец,
	|	кт_СведенияОHTTPПодключенииКБухгалтерии.Сервер КАК Сервер,
	|	кт_СведенияОHTTPПодключенииКБухгалтерии.База КАК База,
	|	кт_СведенияОHTTPПодключенииКБухгалтерии.Логин КАК Логин,
	|	кт_СведенияОHTTPПодключенииКБухгалтерии.Пароль КАК Пароль
	|ИЗ
	|	РегистрСведений.кт_СведенияОHTTPПодключенииКБухгалтерии КАК кт_СведенияОHTTPПодключенииКБухгалтерии
	|ГДЕ
	|	кт_СведенияОHTTPПодключенииКБухгалтерии.РегламентноеЗадание = ИСТИНА";
	
	Выборка = Запрос.Выполнить().Выбрать();     
	
	Пока Выборка.Следующий() Цикл    
		
		Сервер = Выборка.Сервер;
		База = Выборка.База;
		Логин = Выборка.Логин;
		Пароль = Выборка.Пароль;	
		
		АдресРесурса = СтрШаблон("/%1/hs/ObmenHD/find_all", База);     
		
		Попытка	
			Соединение = Новый HTTPСоединение(Сервер,,Логин,Пароль);	
		Исключение
			Возврат;
		КонецПопытки;
		
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Content-Type", "text/plain;charset=UTF-8");
		
		HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса, Заголовки);
		
		СтрокаJSON = ПолучитьJSONСтрокуТрудозатраты(Выборка.Владелец);
		
		Если СтрокаJSON = "[]" Тогда
			Продолжить;
		КонецЕсли; 
		
		HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаJSON);
		
		Попытка
			Ответ = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
		Исключение
			Возврат;
		КонецПопытки;
		
		Если Ответ.КодСостояния <> 200 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаJSON = Ответ.ПолучитьТелоКакСтроку(); 
		
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
		
		Массив = ПрочитатьJSON(ЧтениеJSON); 
		
		Для Каждого Строка Из Массив Цикл	
			ЗаполненитьОплатуВТрудозатратах(Строка);		
		КонецЦикла;
		
	КонецЦикла; 
		
КонецПроцедуры   



