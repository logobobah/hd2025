&НаКлиенте
Перем ОбъектВК экспорт;

&НаКлиенте
Процедура ПодключитьВК(Команда)
    Подключить(Истина);
КонецПроцедуры

&НаКлиенте
Процедура Подключить(УстановитьЕслиНеПодключено) Экспорт
    НачатьПодключениеВнешнейКомпоненты(
        Новый ОписаниеОповещения("ПослеПодключения", ЭтотОбъект, УстановитьЕслиНеПодключено),
        "ОбщийМакет.RDPClient_Макет", "MyVK", AddInType.Native);
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключения(Подключено, УстановитьЕслиНеПодключено) Экспорт
    Если Подключено Тогда
		Если ОбъектВК = Неопределено Тогда	
			ОбъектВК = Новый("AddIn.MyVK.RDPClientNativeAPI1C");
		КонецЕсли;

    ИначеЕсли УстановитьЕслиНеПодключено Тогда
        НачатьУстановкуВнешнейКомпоненты(
            Новый ОписаниеОповещения(
                "Подключить",
                ЭтотОбъект,
                Ложь),
            "ОбщийМакет.RDPClient_Макет");
    Иначе
        Сообщить("Не удалось подключить внешнюю компоненту.");
    КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПодключитьУРС(Команда)
	Перем ОписаниеОшибки;
	Если ОбъектВК = Неопределено Тогда	ОбъектВК = Новый("AddIn.MyVK.RDPClientNativeAPI1C");
	КонецЕсли;
	СерверАдрес = Объект.Адрес; 
	ИмяПользователя = Объект.Логин;
	ДоменПользователя = Объект.ДоменПользователя;
	УИД_Секрета = Объект.Пароль.УникальныйИдентификатор();
	Сообщить("Получен уникальный идентификатор секрета: " + УИД_Секрета);
	Пароль = ПрочитатьНаСервере(УИД_Секрета);  	
	Попытка                                                        
		Шифр = "";
		Шлюз="";
		Набор="";
		ДоменПользователя = "";
    Текст = Пароль;
	ОбъектВК.Кодировать(Текст);
	Шифр = Текст;
		
		ОбъектВК.ПодключитьУРС(СерверАдрес,ДоменПользователя,ИмяПользователя,Шифр,Шлюз,Набор);
	Исключение
		Сообщить("Ошибка при подключении к УРС: " + ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПрочитатьНаСервере(УИД_Секрета)
    // Получаем значения из констант
    Адрес = Константы.АдресХранилища.Получить();
    Порт = Константы.ПортХранилища.Получить();
    Токен = Константы.ТокенVault.Получить();

    URL = "/v1/secret/" + УИД_Секрета;
    Соединение = Новый HTTPСоединение(Адрес, Число(Порт));

    Заголовки = Новый Соответствие();
    Заголовки.Вставить("X-Vault-Token", Токен);

    HTTPЗапрос = Новый HTTPЗапрос(URL, Заголовки);
    
    Попытка
        Ответ = Соединение.ВызватьHTTPМетод("GET", HTTPЗапрос);
        
        Если Ответ.КодСостояния = 200 Тогда
            ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
            
            ЧитательJSON = Новый ЧтениеJSON;
            ЧитательJSON.УстановитьСтроку(ТелоОтвета);
            ДанныеОтвета = ПрочитатьJSON(ЧитательJSON);
            
            Если ДанныеОтвета.Свойство("data") Тогда                                   
                ДанныеСекрета = ДанныеОтвета.data.data;
                ЗначениеСекрета = ДанныеСекрета["key"];
                
                Возврат ЗначениеСекрета; 
            Иначе
                Сообщить("Не удалось извлечь данные секрета");
            КонецЕсли;
            
        ИначеЕсли Ответ.КодСостояния = 404 Тогда
            Сообщить("Секрет не найден. Проверьте правильность пути: " + URL);
        Иначе
            Сообщить("Ошибка запроса: " + Ответ.КодСостояния);
        КонецЕсли;
        
    Исключение
        Сообщить("Ошибка выполнения запроса: " + ОписаниеОшибки());
    КонецПопытки; 
    
    Возврат Неопределено; 
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьВК(ЭтотОбъект);
КонецПроцедуры          


&НаКлиенте
Процедура Кодировать(Команда)
Перем Текст;
Перем УИД_Секрета;
	Пароль = ПрочитатьНаСервере(УИД_Секрета);
    Текст = Пароль;
	ОбъектВК.Кодировать(Текст);
	Шифр = Текст;
	 
КонецПроцедуры


&НаКлиенте
Процедура Декодировать(Команда)
Перем Текст;
    Текст = Шифр;
	ОбъектВК.Декодировать(Текст);
	ЭтотОбъект.Пароль = Текст;
КонецПроцедуры

