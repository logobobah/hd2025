
&НаСервереБезКонтекста
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УИД_Секрета = Строка(ТекущийОбъект.УникальныйИдентификатор());
    ЗаписатьСекрет(УИД_Секрета, ПараметрыЗаписи.ЗначениеСекрета);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)  
	ПараметрыЗаписи.Вставить("ЗначениеСекрета", ЗначениеСекрета);
	ПослеЗаписиНаСервере(Объект.Ссылка, ПараметрыЗаписи);
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ЗаписатьСекрет(УИД_Секрета, ЗначениеСекрета)
    // Используем константы для получения адреса и токена
    URL = "/v1/secret/" + УИД_Секрета;
    АдресСервера = Константы.АдресХранилища.Получить(); // Константа для адреса
    ПортСервера = Константы.ПортХранилища.Получить(); // Константа для порта
    Токен = Константы.ТокенVault.Получить(); // Константа для токена

    // Создание соединения с использованием констант
    Соединение = Новый HTTPСоединение(АдресСервера, Число(ПортСервера));

    Заголовки = Новый Соответствие();
    Заголовки.Вставить("X-Vault-Token", Токен);  // Токен из константы
    Заголовки.Вставить("Content-Type", "application/json");

    Данные = "{""data"": {""key"": """ + ЗначениеСекрета + """}}";

    HTTPЗапрос = Новый HTTPЗапрос(URL, Заголовки);
    HTTPЗапрос.УстановитьТелоИзСтроки(Данные, "UTF-8");

    Попытка
        Ответ = Соединение.ВызватьHTTPМетод("POST", HTTPЗапрос);

        Если Ответ.КодСостояния = 204 Тогда 
            Сообщить("Секрет успешно записан.");
        Иначе
            Сообщить("Ошибка записи секрета: " + Ответ.КодСостояния + " " + Ответ.ПолучитьТелоКакСтроку());
        КонецЕсли;

    Исключение
        Сообщить("Ошибка при записи секрета: " + ОписаниеОшибки());
    КонецПопытки;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрочитатьНаСервере(УИД_Секрета)
    URL = "/v1/secret/" + УИД_Секрета;
    АдресСервера = Константы.АдресХранилища.Получить(); // Константа для адреса
    ПортСервера = Константы.ПортХранилища.Получить(); // Константа для порта
    Токен = Константы.ТокенVault.Получить(); // Константа для токена

    // Создание соединения с использованием констант
    Соединение = Новый HTTPСоединение(АдресСервера, Число(ПортСервера));

    Заголовки = Новый Соответствие();
    Заголовки.Вставить("X-Vault-Token", Токен);  // Токен из константы

    HTTPЗапрос = Новый HTTPЗапрос(URL, Заголовки);

    Попытка
        Ответ = Соединение.ВызватьHTTPМетод("GET", HTTPЗапрос);

        Если Ответ.КодСостояния = 200 Тогда
            ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();

            ЧитательJSON = Новый ЧтениеJSON;
            ЧитательJSON.УстановитьСтроку(ТелоОтвета);
            ДанныеОтвета = ПрочитатьJSON(ЧитательJSON);

            Если ДанныеОтвета.Свойство("data") Тогда
                ДанныеСекрета = ДанныеОтвета.data.data;
                ЗначениеСекрета = ДанныеСекрета["key"];
            КонецЕсли;
        Иначе
            Сообщить("Ошибка запроса: " + Ответ.КодСостояния);
        КонецЕсли;

    Исключение
        Сообщить("Ошибка выполнения запроса: " + ОписаниеОшибки());
    КонецПопытки;

    Возврат ЗначениеСекрета;
КонецФункции

&НаКлиенте
Процедура ПрочитатьНажатие(Команда)
    УИД_Секрета = Объект.Ссылка.УникальныйИдентификатор();
    ЗначениеСекрета = ПрочитатьНаСервере(УИД_Секрета);
КонецПроцедуры    



